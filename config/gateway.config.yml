http:
  port: ${PORT_HTTP:-8080}
  hostname: '0.0.0.0'
https:
  port: ${PORT_HTTPS:-443}
  hostname: '0.0.0.0'
  tls:
    "default":
      key: ${SSL_KEY_PATH}
      cert: ${SSL_CERT_PATH}

####### API ENDPOINTS DEFINITION ########
apiEndpoints:
  ####### ACCOUNT API PUBLIC ########
  accountPublic:
    - host: '*'
      paths: ['/v1/auth']
      methods: ['POST']

    - host: '*'
      paths: ['/v1/auth/forgot']
      methods: ['POST']

    - host: '*'
      paths: ['/v1/auth/verify-email']
      methods: ['POST']

    - host: '*'
      paths: ['/v1/auth/password']
      methods: ['PATCH']
  ####### ACCOUNT API PUBLIC END ########

  ####### ACCOUNT API PRIVATE ########
  accountPrivate:
    ## ENDPOINT TO DELETE USERS ##
    - host: '*'
      paths: ['/v1/users/:user_id']
      methods: ['DELETE']
      scopes: ['admins:delete','healthprofessionals:delete','patients:delete']
    ###############################

    ## ENDPOINTS TO MANAGE ADMIN TYPE USERS ##
    - host: '*'
      paths: ['/v1/admins']
      methods: ['POST']
      scopes: ['admins:create']

    - host: '*'
      paths: ['/v1/admins']
      methods: ['GET']
      scopes: ['admins:readAll']

    - host: '*'
      paths: ['/v1/admins/:admin_id']
      methods: ['GET']
      scopes: ['admins:read']

    - host: '*'
      paths: ['/v1/admins/:admin_id']
      methods: ['PATCH']
      scopes: ['admins:update']
    ###############################

    ## ENDPOINTS TO MANAGE HEALTHPROFESSIONAL TYPE USERS ##
    - host: '*'
      paths: ['/v1/healthprofessionals']
      methods: ['POST']
      scopes: ['healthprofessionals:create']

    - host: '*'
      paths: ['/v1/healthprofessionals']
      methods: ['GET']
      scopes: ['healthprofessionals:readAll']

    - host: '*'
      paths: ['/v1/healthprofessionals/:healthprofessional_id']
      methods: ['GET']
      scopes: ['healthprofessionals:read']

    - host: '*'
      paths: ['/v1/healthprofessionals/:healthprofessional_id']
      methods: ['PATCH']
      scopes: ['healthprofessionals:update']
    ###############################

    ## ENDPOINT TO RECOVER PILOTSTUDIES ASSOCIED  ##
    - host: '*'
      paths: ['/v1/healthprofessionals/:healthprofessional_id/pilotstudies']
      methods: ['GET']
      scopes: ['pilots:read']
    ###############################

    ## ENDPOINTS TO MANAGE PATIENTS ##
    - host: '*'
      paths: ['/v1/patients']
      methods: ['POST']
      scopes: ['patients:create']

    - host: '*'
      paths: ['/v1/patients']
      methods: ['GET']
      scopes: ['patients:readAll']

    - host: '*'
      paths: ['/v1/patients/:patient_id']
      methods: ['GET']
      scopes: ['patients:read']

    - host: '*'
      paths: ['/v1/patients/:patient_id']
      methods: ['PATCH']
      scopes: ['patients:update']
    ######################################

    ## ENDPOINTS TO MANAGE PATIENT GOALS ##
    - host: '*'
      paths: ['/v1/patients/:patient_id/goals']
      methods: ['GET']
      scopes: ['patients:read']

    - host: '*'
      paths: ['/v1/patients/:patient_id/goals']
      methods: ['PATCH']
      scopes: ['patients:update']
    ######################################

    ## ENDPOINT TO RECOVER ALL PILOTS FROM PATIENT ##
    - host: '*'
      paths: ['/v1/patients/:patient_id/pilotstudies']
      methods: ['GET']
      scopes: ['pilots:read']
    ######################################

    ## ENDPOINTS TO MANAGE PILOT STUDIES ##
    - host: '*'
      paths: ['/v1/pilotstudies']
      methods: ['POST']
      scopes: ['pilots:create']

    - host: '*'
      paths: ['/v1/pilotstudies']
      methods: ['GET']
      scopes: ['pilots:readAll']

    - host: '*'
      paths: ['/v1/pilotstudies/:pilotstudy_id']
      methods: ['GET']
      scopes: ['pilots:read']

    - host: '*'
      paths: ['/v1/pilotstudies/:pilotstudy_id']
      methods: ['PATCH']
      scopes: ['pilots:update']

    - host: '*'
      paths: ['/v1/pilotstudies/:pilotstudy_id']
      methods: ['DELETE']
      scopes: ['pilots:delete']
    ######################################

    ## ENDPOINTS TO MANAGE HEALTH PROFESSIONALS ASSOCIATION WITH A PILOT STUDY ##
    - host: '*'
      paths: ['/v1/pilotstudies/:pilotstudy_id/healthprofessionals']
      methods: ['GET']
      scopes: ['healthprofessionals:read']

    - host: '*'
      paths: ['/v1/pilotstudies/:pilotstudy_id/healthprofessionals/:healthprofessional_id']
      methods: ['POST']
      scopes: ['pilots:update']

    - host: '*'
      paths: ['/v1/pilotstudies/:pilotstudy_id/healthprofessionals/:healthprofessional_id']
      methods: ['DELETE']
      scopes: ['pilots:update']
    ######################################

    ## ENDPOINTS TO MANAGE PATIENTS ASSOCIATION WITH A PILOT STUDY ##
    - host: '*'
      paths: ['/v1/pilotstudies/:pilotstudy_id/patients']
      methods: ['GET']
      scopes: ['patients:read']

    - host: '*'
      paths: ['/v1/pilotstudies/:pilotstudy_id/patients/:patient_id']
      methods: ['POST']
      scopes: ['pilots:update']

    - host: '*'
      paths: ['/v1/pilotstudies/:pilotstudy_id/patients/:patient_id']
      methods: ['DELETE']
      scopes: ['pilots:update']
    ######################################

  ################ ACCOUNT API PRIVATE END #####################################

  ####### EHR API PRIVATE ########
  ehrPrivate:
    ## ENDPOINTS TO MANAGE NUTRITION QUESTIONNAIRES ##
    - host: '*'
      paths: ['/v1/patients/:patient_id/nutritional/questionnaires']
      methods: ['POST']
      scopes: ['forms:create']

    - host: '*'
      paths: ['/v1/patients/:patient_id/nutritional/questionnaires']
      methods: ['GET']
      scopes: ['forms:read']

    - host: '*'
      paths: ['/v1/patients/:patient_id/nutritional/questionnaires/last']
      methods: ['GET']
      scopes: ['forms:read']

    - host: '*'
      paths: ['/v1/patients/:patient_id/nutritional/questionnaires/:questionnaire_id']
      methods: ['GET']
      scopes: ['forms:read']

    - host: '*'
      paths: ['/v1/patients/:patient_id/nutritional/questionnaires/:questionnaire_id']
      methods: ['DELETE']
      scopes: ['forms:delete']

    - host: '*'
      paths: ['/v1/patients/:patient_id/nutritional/questionnaires/:questionnaire_id/:resource_name']
      methods: ['PUT']
      scopes: ['forms:update']
    ###############################

    ## ENDPOINTS TO MANAGE ODONTOLOGICAL QUESTIONNAIRES ##
    - host: '*'
      paths: ['/v1/patients/:patient_id/odontological/questionnaires']
      methods: ['POST']
      scopes: ['forms:create']

    - host: '*'
      paths: ['/v1/patients/:patient_id/odontological/questionnaires']
      methods: ['GET']
      scopes: ['forms:read']

    - host: '*'
      paths: ['/v1/patients/:patient_id/odontological/questionnaires/last']
      methods: ['GET']
      scopes: ['forms:read']

    - host: '*'
      paths: ['/v1/patients/:patient_id/odontological/questionnaires/:questionnaire_id']
      methods: ['GET']
      scopes: ['forms:read']

    - host: '*'
      paths: ['/v1/patients/:patient_id/odontological/questionnaires/:questionnaire_id']
      methods: ['DELETE']
      scopes: ['forms:delete']

    - host: '*'
      paths: ['/v1/patients/:patient_id/odontological/questionnaires/:questionnaire_id/:resource_name']
      methods: ['PUT']
      scopes: ['forms:update']
    ###############################

    ## ENDPOINT TO RECOVER ALL QUESTIONNAIRES TYPES ##
    - host: '*'
      paths: ['/v1/questionnaires/types']
      methods: ['GET']
      scopes: ['forms:read']
    ###############################

  ############### EHR API PRIVATE END ##########################################

  ####### MHEALTH API PRIVATE ########
  mhealthPrivate:
    ## ENDPOINTS TO MANAGE MEASUREMENTS ##
    - host: '*'
      paths: ['/v1/measurements/types']
      methods: ['GET']
      scopes: ['measurements:read']

    - host: '*'
      paths: ['/v1/patients/:patient_id/measurements']
      methods: ['POST']
      scopes: ['measurements:create']

    - host: '*'
      paths: ['/v1/patients/:patient_id/measurements']
      methods: ['GET']
      scopes: ['measurements:read']

    - host: '*'
      paths: ['/v1/patients/:patient_id/measurements/last']
      methods: ['GET']
      scopes: ['measurements:read']

    - host: '*'
      paths: ['/v1/patients/:patient_id/measurements/:measurement_id']
      methods: ['GET']
      scopes: ['measurements:read']

    - host: '*'
      paths: ['/v1/patients/:patient_id/measurements/:measurement_id']
      methods: ['DELETE']
      scopes: ['measurements:delete']
    ###############################

    ## ENDPOINTS TO MANAGE PATIENTS.PHYSICALACTIVITIES ##
    - host: '*'
      paths: ['/v1/patients/:patient_id/physicalactivities']
      methods: ['POST']
      scopes: ['activities:create']

    - host: '*'
      paths: ['/v1/patients/:patient_id/physicalactivities']
      methods: ['GET']
      scopes: ['activities:read']

    - host: '*'
      paths: ['/v1/patients/:patient_id/physicalactivities/:physicalactivity_id']
      methods: ['GET']
      scopes: ['activities:read']

    - host: '*'
      paths: ['/v1/patients/:patient_id/physicalactivities/:physicalactivity_id']
      methods: ['DELETE']
      scopes: ['activities:delete']
    ###############################

    ## ENDPOINTS TO MANAGE PATIENTS.SLEEP ##
    - host: '*'
      paths: ['/v1/patients/:patient_id/sleep']
      methods: ['POST']
      scopes: ['sleep:create']

    - host: '*'
      paths: ['/v1/patients/:patient_id/sleep']
      methods: ['GET']
      scopes: ['sleep:read']

    - host: '*'
      paths: ['/v1/patients/:patient_id/sleep/:sleep_id']
      methods: ['GET']
      scopes: ['sleep:read']

    - host: '*'
      paths: ['/v1/patients/:patient_id/sleep/:sleep_id']
      methods: ['DELETE']
      scopes: ['sleep:delete']
    ###############################

    ## ENDPOINTS TO MANAGE DEVICES ##
    - host: '*'
      paths: ['/v1/patients/:patient_id/devices']
      methods: ['POST']
      scopes: ['devices:create']

    - host: '*'
      paths: ['/v1/patients/:patient_id/devices']
      methods: ['GET']
      scopes: ['devices:read']

    - host: '*'
      paths: ['/v1/patients/:patient_id/devices/:device_id']
      methods: ['GET']
      scopes: ['devices:read']

    - host: '*'
      paths: ['/v1/patients/:patient_id/devices/:device_id']
      methods: ['DELETE']
      scopes: ['devices:delete']
    ###############################

  ############### MHEALTH API PRIVATE END ##########################################

  ####### ANALYTICS API PRIVATE ########
  analyticsPrivate:
    ## ENDPOINTS TO MANAGE NUTRITIONAL EVALUATIONS ##
    - host: '*'
      paths: ['/v1/patients/:patient_id/nutritional/evaluations']
      methods: ['POST']
      scopes: ['evaluations:create']

    - host: '*'
      paths: ['/v1/patients/:patient_id/nutritional/evaluations']
      methods: ['GET']
      scopes: ['evaluations:read']

    - host: '*'
      paths: ['/v1/patients/:patient_id/nutritional/evaluations/:evaluation_id']
      methods: ['GET']
      scopes: ['evaluations:read']

    - host: '*'
      paths: ['/v1/patients/:patient_id/nutritional/evaluations/:evaluation_id']
      methods: ['DELETE']
      scopes: ['evaluations:delete']
    ####################################

    ## ENDPOINTS TO MANAGE COUNSELINGS FOR A NUTRITIONAL EVALUATIONS ##
    - host: '*'
      paths: ['/v1/patients/:patient_id/nutritional/evaluations/:evaluation_id/counselings']
      methods: ['POST']
      scopes: ['evaluations:update']
    ####################################

    ## ENDPOINT TO RECOVER ALL NUTRITIONAL EVALUATIONS FOR A PILOTSTUDY ##
    - host: '*'
      paths: ['/v1/pilotstudies/:pilotstudy_id/nutritional/evaluations']
      methods: ['GET']
      scopes: ['evaluations:read']
    ####################################

    ## ENDPOINT TO RECOVER ALL EVALUATIONS FOR A HEALTHPROFESSIONAL ##
    - host: '*'
      paths: ['/v1/healthprofessionals/:healthprofessional_id/nutritional/evaluations']
      methods: ['GET']
      scopes: ['evaluations:read']
    ###############################

    ## ENDPOINTS TO MANAGE EVALUATIONS DATA FOR A PILOTSTUDY ##
    - host: '*'
      paths: ['/v1/pilotstudies/:pilotstudy_id/data']
      methods: ['POST']
      scopes: ['evaluations:create']

    - host: '*'
      paths: ['/v1/pilotstudies/:pilotstudy_id/data']
      methods: ['GET']
      scopes: ['evaluations:read']
    ####################################

  ############### ANALYTICS API PRIVATE END ##########################################

  ####### NOTIFICATION API PRIVATE ########
  notificationPrivate:
    ## ENDPOINTS TO MANAGE E-MAIL NOTIFICATION ##
    - host: '*'
      paths: ['/v1/users/:user_id/emails']
      methods: ['POST']
      scopes: ['notifications:create']

    - host: '*'
      paths: ['/v1/users/:user_id/emails']
      methods: ['GET']
      scopes: ['notifications:read']

    - host: '*'
      paths: ['/v1/users/:user_id/emails/:email_id']
      methods: ['GET']
      scopes: ['notifications:read']

    - host: '*'
      paths: ['/v1/users/:user_id/emails/:email_id']
      methods: ['DELETE']
      scopes: ['notifications:delete']
  ############### NOTIFICATION API PRIVATE END #######################################

  ############### TIME SERIES API START #######################################
  timeSeriesPrivate:
    ### PATIENTS.TIMESERIES ###
    - host: '*'
      paths: ['/v1/patients/:patient_id/date/:start_date/:end_date/timeseries']
      methods: ['GET']
      scopes: ['series:read']

    ### PATIENTS.RESOURCE.TIMESERIES ###
    - host: '*'
      paths: ['/v1/patients/:patient_id/:resource/date/:start_date/:end_date/timeseries']
      methods: ['GET']
      scopes: ['series:read']

    ### PATIENTS.RESOURCE.INTERVAL.TIMESERIES ###
    - host: '*'
      paths: ['/v1/patients/:patient_id/:resource/date/:date/interval/:interval/timeseries']
      methods: ['GET']
      scopes: ['series:read']

    ### PATIENTS.RESOURCE.TIME.INTERVAL.TIMESERIES ###
    - host: '*'
      paths: ['/v1/patients/:patient_id/:resource/date/:start_date/:end_date/time/:start_time/:end_time/interval/:interval/timeseries']
      methods: ['GET']
      scopes: ['series:read']
  ############### TIME SERIES API END #######################################

  ############### DATA SYNC AGENT API START #######################################
  dsAgentPrivate:
    ### FITBIT ###
    - host: '*'
      paths: ['/v1/fitbit']
      methods: ['GET']
      scopes: ['external:sync']

    ### USERS.FITBIT.AUTH ###
    - host: '*'
      paths: ['/v1/users/:user_id/fitbit/auth']
      methods: ['POST', 'GET']
      scopes: ['external:sync']

    - host: '*'
      paths: ['/v1/users/:user_id/fitbit/auth/revoke']
      methods: ['POST']
      scopes: ['external:sync']

  dsAgentFitbitSyncPrivate:
    ### USERS.FITBIT.SYNC ###
    - host: '*'
      paths: ['/v1/users/:user_id/fitbit/sync']
      methods: ['POST']
      scopes: ['external:sync']
  ############### DATA SYNC AGENT API END #######################################

  ############################ WEB APP START ####################################
  webApp:
    host: ${WEB_APP_HOSTNAME}
  ############################# WEB APP END #####################################

####### SERVICE ENDPOINTS DEFINITIONS ########
serviceEndpoints:
  accountService:
    url: ${ACCOUNT_SERVICE:-https://localhost:3001}
  mhealthService:
    url: ${MHEALTH_SERVICE:-https://localhost:4001}
  ehrService:
    url: ${EHR_SERVICE:-https://localhost:5001}
  analyticsService:
    url: ${ANALYTICS_SERVICE:-htts://localhost:6001}
  notificationService:
    url: ${NOTIFICATION_SERVICE:-https://localhost:7001}
  timeSeriesService:
    url: ${TIME_SERIES_SERVICE:-https://localhost:8001}
  dsAgentService:
    url: ${DS_AGENT_SERVICE:-https://localhost:9001}
  webAppService:
    url: ${WEB_APP_SERVICE:-http://localhost:4200}

####### POLICIES USED IN PIPELINES DEFINITION ########
policies:
  - log
  - proxy
  - rate-limit
  - jwtScopes-policy
  - jwt-policy
  - auth-policy
  - body-parser-policy
  - delete-user-policy
  - recaptcha-policy
  - request-transformer

####### PIPELINES DEFINITION ########
pipelines:
  publicAccountServicePipeline:
    apiEndpoints:
      - accountPublic
    policies:
      - log: &log
          - action:
              message: ${req.connection.remoteAddress} - "${req.method} ${req.originalUrl} HTTP/${req.httpVersion}" - "${req.headers['user-agent']}"
      - rate-limit:
          - action:
              max: 10
              windowMs: 1800000 # 30 minutes
              delayMs: 0
              rateLimitBy: "${req.hostname} ${req.ip}"
              message: "Many requests. Please try later after 30 minutes."
              headers: true
      - body-parser-policy:
      - recaptcha-policy:
          - condition:
              name: 'regex-path-method'
              #regexPath é uma expressão regular
              regexPath: '^(\/v1\/auth\/{0,1})$'
              method: 'POST'
            action:
              serverKey: ${RECAPTCHA_SERVER_KEY}
              recaptchaResponse: '${req.body.recaptchaResponse}'
      - auth-policy:
          - condition:
              name: 'regex-path-method'
              #regexPath é uma expressão regular
              regexPath: '^(\/v1\/auth\/{0,1})$'
              method: 'POST'
            action:
              urlAuthService: ${ACCOUNT_SERVICE:-https://localhost:3001}/v1/auth
              secretOrPublicKeyFile: ${JWT_PUBLIC_KEY_PATH:-.certs/jwt.key.pub}
              issuer: ${ISSUER:-haniot}
      - proxy:
          - action: &proxy
              prependPath:  true
              ignorePath:   false
              stripPath:    false
              changeOrigin: true
              secure: false
              timeout: 10000
              serviceEndpoint: accountService

  privateAcountServicePipeline:
    apiEndpoints:
      - accountPrivate
    policies:
      - log: *log
      - body-parser-policy:
      - jwt-policy: &jwt-policy
          - action:
              secretOrPublicKeyFile: ${JWT_PUBLIC_KEY_PATH:-.certs/jwt.pem}
              issuer: ${ISSUER:-haniot}
      - jwtScopes-policy:
      - delete-user-policy:
          - condition:
              name: 'regex-path-method'
              #regexPath é uma expressão regular
              regexPath: '^(\/v1\/users\/)[a-fA-F0-9]{24}\/{0,1}$'
              method: 'DELETE'
            action:
              urlDeleteService: ${ACCOUNT_SERVICE:-https://localhost:3001}/v1/users
      - request-transformer: &req-transformer
          - action:
              headers:
                add:
                  Haniot-User-Id: req.user.sub
                  Haniot-User-type: req.user.sub_type
                  Haniot-User-Scope: req.user.scope
      - proxy:
          - action:
              <<: *proxy
              serviceEndpoint: accountService

  privateMHEALTHServicePipeline:
    apiEndpoints:
      - mhealthPrivate
    policies:
      - log: *log
      - jwt-policy: *jwt-policy
      - jwtScopes-policy:
      - request-transformer: *req-transformer
      - proxy:
          - action:
              <<: *proxy
              serviceEndpoint: mhealthService

  privateEHRServicePipeline:
    apiEndpoints:
      - ehrPrivate
    policies:
      - log: *log
      - jwt-policy: *jwt-policy
      - jwtScopes-policy:
      - request-transformer: *req-transformer
      - proxy:
          - action:
              <<: *proxy
              serviceEndpoint: ehrService

  privateAnalyticsServicePipeline:
    apiEndpoints:
      - analyticsPrivate
    policies:
      - log: *log
      - body-parser-policy:
      - jwt-policy: *jwt-policy
      - jwtScopes-policy:
      - request-transformer: *req-transformer
      - proxy:
          - action:
              <<: *proxy
              serviceEndpoint: analyticsService

  privateNotificationServicePipeline:
    apiEndpoints:
      - notificationPrivate
    policies:
      - log: *log
      - jwt-policy: *jwt-policy
      - jwtScopes-policy:
      - request-transformer: *req-transformer
      - proxy:
          - action:
              <<: *proxy
              serviceEndpoint: notificationService

  privateTimeSeriesServicePipeline:
    apiEndpoints:
      - timeSeriesPrivate
    policies:
      - log: *log
      - body-parser-policy:
      - jwt-policy: *jwt-policy
      - jwtScopes-policy:
      - request-transformer: *req-transformer
      - proxy:
          - action:
              <<: *proxy
              serviceEndpoint: timeSeriesService

  privateDsAgentServicePipeline:
    apiEndpoints:
      - dsAgentPrivate
    policies:
      - log: *log
      - body-parser-policy:
      - jwt-policy: *jwt-policy
      - jwtScopes-policy:
      - request-transformer: *req-transformer
      - proxy:
          - action:
              <<: *proxy
              serviceEndpoint: dsAgentService

  ##################### PRIVATE PIPELINE DS AGENT SERVICE - FITBIT SYNC ####################
  privateDsAgentFitbitSyncPipeline:
    apiEndpoints:
      - dsAgentFitbitSyncPrivate
    policies:
      - log: *log
      - body-parser-policy:
      - jwt-policy: *jwt-policy
      - jwtScopes-policy:
      - request-transformer: *req-transformer
      - rate-limit:
          - action:
              max: 10
              windowMs: 3600000 # 1h
              delayMs: 0
              rateLimitBy: "${req.hostname} ${req.params.user_id}"
              message: 'Synchronization limit per hour exceeded for patient.  Please try later after 1 hour.'
              headers: true
      - proxy:
          - action:
              <<: *proxy
              serviceEndpoint: dsAgentService

  webAppPipeline:
    apiEndpoints:
      - webApp
    policies:
      - proxy:
          - action:
              <<: *proxy
              serviceEndpoint: webAppService

  ###########################################################################
